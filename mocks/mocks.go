// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_example is a generated GoMock package.
package mock_example

import (
	api "github.com/canercidam/gomock-example/api"
	repo "github.com/canercidam/gomock-example/repo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// MakeSomeQuery mocks base method.
func (m *MockAPI) MakeSomeQuery(param string) (*api.QueryResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeSomeQuery", param)
	ret0, _ := ret[0].(*api.QueryResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeSomeQuery indicates an expected call of MakeSomeQuery.
func (mr *MockAPIMockRecorder) MakeSomeQuery(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeSomeQuery", reflect.TypeOf((*MockAPI)(nil).MakeSomeQuery), param)
}

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// StoreData mocks base method.
func (m *MockRepository) StoreData(data *repo.StoredData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreData", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreData indicates an expected call of StoreData.
func (mr *MockRepositoryMockRecorder) StoreData(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreData", reflect.TypeOf((*MockRepository)(nil).StoreData), data)
}
